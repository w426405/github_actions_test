name: WindowsBuild

on: [push, pull_request]

jobs:
  Build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
      with:
        path: 'XingDBG'

    - name: Download deps
      id: downloadDeps
      working-directory: ${{github.workspace}}
      shell: pwsh
      run: |
        Invoke-WebRequest -Uri https://download.qt.io/official_releases/qt/6.2/6.2.4/single/qt-everywhere-src-6.2.4.zip -OutFile qt-everywhere-src-6.2.4.zip
        &7z x qt-everywhere-src-6.2.4.zip
        Invoke-WebRequest -Uri https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-15.0.2.zip -OutFile llvm-project-llvmorg-15.0.2.zip
        &7z x llvm-project-llvmorg-15.0.2.zip
        cd llvm-project-llvmorg-15.0.2
        sed -i "s/liblldb SHARED/liblldb STATIC/g" lldb/source/API/CMakeLists.txt

    - name: Make dir
      working-directory: ${{github.workspace}}
      shell: cmd
      run: |
        mkdir out
        mkdir build


    - uses: actions/setup-python@v4
      with:
        python-version: '3.10.7'
        architecture: 'x64' 

    - name: Configure build for amd64
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: amd64
        spectre: false
        vsversion: 2022

    - name: Configure qt
      working-directory: ${{github.workspace}}
      shell: cmd
      run: |
        cd qt-everywhere-src-6.2.4
        .\configure -prefix ${{github.workspace}}/out/qt -opensource -confirm-license -release -static -platform win32-msvc -static-runtime -no-pch -gui -nomake examples -nomake tests -skip qtconnectivity -skip qtdeclarative -skip qtlocation -skip qtmultimedia -skip qtquick1 -skip qtquickcontrols -skip qtsensors -skip qtdoc -skip qtlottie -skip qtmqtt -skip qtopcua -skip qtquicktimeline -skip qtquick3d -skip qtscxml -skip qtvirtualkeyboard -skip qtwebengine -skip qtwebview -skip qt3d -skip qtserialbus --webp=qt --tiff=qt

    - name: Build qt
      working-directory: ${{github.workspace}}
      shell: cmd
      run: |
        cd qt-everywhere-src-6.2.4
        cmake --build . --parallel
        ninja install
        cd ${{github.workspace}}
        echo "do delete"
        rmdir /S /Q qt-everywhere-src-6.2.4

    - name: Build lldb
      working-directory: ${{github.workspace}}
      shell: cmd
      run: |
        cd build
        mkdir lldb
        cd lldb
        set CXXFLAGS="/DLLDB_API="
        cmake -G Ninja -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/out/lldb -DCMAKE_BUILD_TYPE=Release -DLLVM_USE_CRT_RELEASE=MT -DLLVM_ENABLE_PROJECTS="clang;lldb" -DLLDB_INCLUDE_TESTS=OFF -DLLDB_TOOL_LLDB_VSCODE_BUILD=OFF -DCLANG_INCLUDE_DOCS=OFF -DCLANG_INCLUDE_TESTS=OFF -DBENCHMARK_INSTALL_DOCS=OFF -DLLVM_INCLUDE_BENCHMARKS=OFF -DLLVM_INCLUDE_DOCS=OFF -DLLVM_INCLUDE_EXAMPLES=OFF -DLLVM_INCLUDE_RUNTIMES=OFF -DLLVM_INCLUDE_TESTS=OFF -DLLDB_ENABLE_LUA=OFF -DLLDB_ENABLE_PYTHON=OFF ${{github.workspace}}/llvm-project-llvmorg-15.0.2/llvm
        cmake --build . --parallel
        ninja install
        copy ${{github.workspace}}\build\lldb\lib\*.lib ${{github.workspace}}\out\lldb\lib\ /y
        cd ${{github.workspace}}\build
        rmdir /S /Q lldb

    - name: Build XingDBG
      working-directory: ${{github.workspace}}
      shell: cmd
      run: |
        cd build
        mkdir XingDBG
        cd XingDBG
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Release^
          -DQt6_DIR="${{github.workspace}}\out\qt\lib\cmake\Qt6"^
          -DQt6BundledPcre2_DIR="${{github.workspace}}\out\qt\lib\cmake\Qt6BundledPcre2"^
          -DQt6BundledLibpng_DIR="${{github.workspace}}\out\qt\lib\cmake\Qt6BundledLibpng"^
          -DQt6CoreTools_DIR="${{github.workspace}}\out\qt\lib\cmake\Qt6CoreTools"^
          -DQt6BundledHarfbuzz_DIR="${{github.workspace}}\out\qt\lib\cmake\Qt6BundledHarfbuzz"^
          -DQt6BundledFreetype_DIR="${{github.workspace}}\out\qt\lib\cmake\Qt6BundledFreetype"^
          -DQt6GuiTools_DIR="${{github.workspace}}\out\qt\lib\cmake\Qt6GuiTools"^
          -DQt6WidgetsTools_DIR="${{github.workspace}}\out\qt\lib\cmake\Qt6WidgetsTools"^
          -DLLVM_DIR="${{github.workspace}}\out\lldb\lib\cmake\llvm"^
          -DKDDockWidgets_QT6=ON^
          -DKDDockWidgets_STATIC=ON^
          -DKDDockWidgets_EXAMPLES=OFF^
          -DKDDockWidgets_STATIC=ON^
          ${{github.workspace}}/XingDBG
        cmake --build . --parallel
        copy XingDBG.exe ${{github.workspace}}\out\


    - name: Pack files
      working-directory: ${{github.workspace}}\out\
      run: |
          &7z a lldb.7z lldb
          &7z a qt.7z qt
          &7z a XingDBG-Win64.7z XingDBG.exe

    - uses: actions/upload-artifact@v2
      with:
        path: ${{github.workspace}}\out\*.7z

    - uses: xresloader/upload-to-github-release@v1
      if: contains(github.ref, 'tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        file: "*.7z"
        overwrite: true
        tags: true
        draft: false
